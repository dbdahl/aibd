2019-04-11: Dahl

  1. Random sigmaX and sigmaW for posterior inference is implemented.

  2. Added tests sigmaX and sigmaW.

  3. Streamlined all tests and implemented AIBD_TEST_LEVEL environment
     variable to adjust the degree of testing.  See the file
     'setup-instance.R'.

  4. Package checks without errors, warnings, or notes.  There is one
     comment regarding long running examples which will need to be
     addressed for CRAN.


2019-04-10: Dahl

  1. Implemented efficient posterior inference for IBP and AIBD prior in the
     Linear Gaussian Latent Feature Model (LGLFM).

  2. In addition to random feature allocation (above), random permutation
     and random mass parameter for posterior inference is implemented.

  3. logProbabilityFeatureAllocation function replaces prFeatureAllocation.

  4. Permit 'permutation' argument in aibd function to be NULL, thereby
     indicating that the distribution marginalizings over all possible
     permutations of the items.  This is helpful for: 1. testing the MCMC
     handling of the permutations, 2: Illustrating properties of the prior.
     Unfortunately, it is only feasible for very small number of items.

  5. Added and updated all tests for all the above items.

  6. Implemented the expectedPairwiseAllocationMatrix function to compute
     the expected number of shared features among all pairs of items.



2019-03-19: Group meeting notes

  1. Report on what we've been working on.
  2. Tasks:

      1. Dahl

      2. Warr

      3. Meyer


2019-03-12: Group meeting notes

  1. Report on what we've been working on.
  2. Tasks:

      1. Dahl
          1. Imlement one-element update based on random sampling an occupied
             feature and up-down new feature proposal.

      2. Warr
          1. Understand rank one updates.
          2. Data into stray directory with recommended hyperprior values.

      3. Meyer
          1. Implement contructive sampling from the AIBD in R and add tests.
          2. Copy 'test-ibp-sampling-matches-pmf.R' to
             'test-aibd-sampling-matches-pmf.R' and implement the tests:
              1. Sampling from AIBD using constructive definition (from Scala)
                 gives a distribution consistent with the pmf.
              2. Sampling from AIBD using constructive definition (from R)
                 gives a distribution consistent with the pmf.
          3. Reconstruct plots from poster using our current code.


2019-03-04: Warr

  1. Completed Tasks 1-3 from 2019-02-26.


2019-03-04: Group meeting notes

  1. Report on what we've been working on.
  2. Tasks:

      1. Dahl
          1. Scala implementation of MCMC sampling for the posterior of the
             linear Gaussian latent feature model (LGLFM) using the IBP prior,
             including adding tests.
          2. Let Warr know the X matrix and hyperparameter settings for
             posterior simulation.

      2. Warr
          1. R implementation of MCMC sampling for the posterior of the
             linear Gaussian latent feature model (LGLFM) using the IBP prior,
             including adding tests.
          2. Construct an X matrix, Z matrix, and hyperparameter values with
             about 10 items based on simulation using 'set.seed()'.

      3. Meyer
          1. Implement contructive sampling from the AIBD in R and add tests.
          2. Copy 'test-ibp-sampling-matches-pmf.R' to
             'test-aibd-sampling-matches-pmf.R' and implement the tests:
              1. Sampling from AIBD using constructive definition (from Scala)
                 gives a distribution consistent with the pmf.
              2. Sampling from AIBD using constructive definition (from R)
                 gives a distribution consistent with the pmf.
          3. Reconstruct plots from poster using our current code.



2019-03-01: Dahl

  1. Improved the tests in 'test-ibp-sampling-matches-pmf.R' in preparation
     for testing posterior simulation.
  2. Worked on an initiate attempt for posterior simulation using the IBP.

2019-02-28: Meyer

  1. Consolidated R's implementation for the AIBD pmf into one function and
     added a test to show both R and Scala's values agree.

2019-02-28: Warr

  1. Added the corrected posters to the respository

2019-02-28: Dahl

  1. Debugged discrepency between R and Scala implementation of
     logLikelihoodLGLFM.

  2. Made new tests in 'test-lglfm-likelihood.R' to provide:
      1. R and Scala give the same values for likelihood in LGLFM.
      2. R and Scala give the same values for posterior in LGLFM.

  3. Wrote and polished documentation for functions related to LGLFM.

2019-02-27: Dahl

  1. Wrote the Scala implementation for MCMC from the IBP prior.  Access it by
     providing an X matrix with no columns to the function samplePosteriorLGLFM.

  2. Edits tests in 'test-ibp-sampling-matches-pmf.R' to provide:
      1. Sampling from IBP using constructive definition (from Scala) gives a
         distribution consistent with the pmf.
      2. Sampling from IBP using MCMC (from Scala) gives a distribution
         consistent with the pmf.
      3. Sampling from IBP using constructive definition (from R) gives a
         distribution consistent with the pmf.

  3. Warr has code the needs to be integrated and tested to implement:
      1. Sampling from IBP using MCMC (from R) gives a distribution consistent
         with the pmf.
    Specifically, this test needs to be uncommented after Warr modifies the
    function 'samplePosteriorLGLFM' to perform prior sampling when X matrix has
    no columns.

2019-02-26: Group meeting notes

  1. Tasks:

      1. Dahl
          1. Let Warr know where to save corrected landscape and portrait
             posters in Git repository.
          2. Scala implementation of MCMC sampling for IBP prior,  including
             adding tests.
          3. Scala implementation of MCMC sampling for the posterior of the
             linear Gaussian latent feature model (LGLFM) using the IBP prior,
             including adding tests.

      2. Warr
          1. Integrate code into the package to sampling from the IBP using
             MCMC (from R).  Specifically, modify the R implementation of the
             function 'samplePosteriorLGLFM' to perform prior sampling when X
             matrix has no columns.
          2. Enable tests for the implementation #1 above by uncommenting the
             lines at the bottom of 'test-ibp-sampling-matches-pmf.R'.
          3. Add R implementation in the function 'samplePosteriorLGLFM' to
             provide MCMC sampling for the posterior of the linear Gaussian
             latent feature model (LGLFM) using the IBP prior.
          4. Commit the corrected landscape and portrait posters in Git
             repository.

      3. Meyer
          1. Copy 'test-ibp-sampling-matches-pmf.R' to
             'test-aibd-sampling-matches-pmf.R' and implement the tests:
              1. Sampling from AIBD using constructive definition (from Scala)
                 gives a distribution consistent with the pmf.
              2. Sampling from AIBD using constructive definition (from R)
                 gives a distribution consistent with the pmf.

