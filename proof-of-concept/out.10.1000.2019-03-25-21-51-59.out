
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> set.seed(74927)
> library(aibd2)
> 
> # Sys.setenv(nItems="20")
> # Sys.setenv(nSamples="100")
> # Sys.setenv(stamp="trashmeout")
> 
> stamp <- Sys.getenv("stamp")
> stamp
[1] "out.10.1000.2019-03-25-21-51-59"
> 
> pdf(paste0(stamp,".pdf"),width=6,height=4)
> 
> mass <- 1.5
> sigx <- 3.0
> sigw <- 1.0
> nItems <- as.integer(Sys.getenv("nItems"))
> nItems
[1] 10
> 
> nSamples <- as.integer(Sys.getenv("nSamples"))
> nSamples
[1] 1000
> 
> distances <- as.matrix(dist(scale(USArrests)))
> which <- sample(1:nrow(distances),nItems)
> distances <- distances[which,which]
> 
> temperature <- 4
> similarity <- 1/as.matrix(distances)^temperature
> simVector <- as.vector(similarity)
> simVector <- simVector[!is.infinite(simVector)]
> plot(simVector,type="h")
> 
> distIBP <- ibp(mass,nItems)
> distAIBD <- aibd(mass,1:nItems,similarity)
> 
> Z <- sampleFeatureAllocation(1, distAIBD, "scala")[[1]]
> dim(Z)
[1] 10  4
> 
> dimW <- 32
> W <- matrix(rnorm(ncol(Z)*dimW,sd=sigw),nrow=ncol(Z),ncol=dimW)
> 
> e <- rnorm(nrow(Z)*ncol(W),0,sd=sigx)
> X <- Z %*% W + e
> 
> samplesAIBD <- samplePosteriorLGLFM(Z, distAIBD, X, sdX=sigx, sdW=sigw, samplingMethod="viaNeighborhoods2", implementation="scala", nSamples=nSamples, parallel=TRUE, rankOneUpdates=TRUE)
[                                                                                                    ]****************************************************************************************************]
Parallel:           true
Rank-one updates:   true
Main lapse:         1 invocations in 13.8511 seconds
Combinatoric lapse: 10000 invocations in 10.8907 seconds
Singleton lapse:    10000 invocations in 1.8867 seconds
Enumeration lapse;  10000 invocations in 0.8578 seconds
> 
> samplesIBP <- samplePosteriorLGLFM(Z, distIBP, X, sdX=sigx, sdW=sigw, samplingMethod="viaNeighborhoods2", implementation="scala", nSamples=nSamples, parallel=TRUE, rankOneUpdates=TRUE)
[                                                                                                    ]****************************************************************************************************]
Parallel:           true
Rank-one updates:   true
Main lapse:         1 invocations in 13.8455 seconds
Combinatoric lapse: 10000 invocations in 10.8781 seconds
Singleton lapse:    10000 invocations in 1.5138 seconds
Enumeration lapse;  10000 invocations in 1.2455 seconds
> 
> library(sdols)
> epamAIBD <- expectedPairwiseAllocationMatrix(samplesAIBD)
> epamIBP  <- expectedPairwiseAllocationMatrix(samplesIBP)
> 
> plot(as.vector(epamAIBD),as.vector(as.matrix(distances)), main="AIBD")
> cor(as.vector(epamAIBD),as.vector(as.matrix(distances)))
[1] -0.61361
> 
> plot(as.vector(epamIBP),as.vector(as.matrix(distances)), main="IBP")
> cor(as.vector(epamIBP),as.vector(as.matrix(distances)))
[1] -0.337237
> 
> salso(epamAIBD, structure = "featureAllocation")
      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
 [1,]    1    1    0    0    0    0    0    0    0
 [2,]    1    0    1    1    0    0    0    0    0
 [3,]    1    0    0    0    1    0    0    0    0
 [4,]    1    0    1    0    0    0    0    0    0
 [5,]    1    0    0    0    0    1    0    0    0
 [6,]    1    0    0    1    0    0    1    0    0
 [7,]    1    0    0    0    1    0    0    0    0
 [8,]    1    0    0    1    0    1    0    0    0
 [9,]    1    0    0    0    0    0    0    1    0
[10,]    1    0    0    1    0    0    0    0    1
attr(,"nScans")
[1] -1
attr(,"nCandidates")
[1] 104
> salso(epamIBP,  structure = "featureAllocation")
      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
 [1,]    1    0    0    0    0    0    0    0    0
 [2,]    1    1    1    0    0    0    0    0    0
 [3,]    1    0    0    1    0    0    0    0    0
 [4,]    1    1    0    0    1    0    0    0    0
 [5,]    1    0    0    0    0    1    0    0    0
 [6,]    1    0    1    0    0    0    1    0    0
 [7,]    1    1    0    0    0    0    0    1    0
 [8,]    1    1    0    0    0    0    1    0    0
 [9,]    1    0    0    0    0    0    0    0    1
[10,]    1    1    0    0    0    1    0    0    0
attr(,"nScans")
[1] -1
attr(,"nCandidates")
[1] 104
> 
> dev.off()
null device 
          1 
> save.image(file=paste0(stamp,".RData"))
> 
> 
> proc.time()
   user  system elapsed 
  0.308   0.053  37.999 
